<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2025-04-01T16:23:47+01:00</updated><id>http://localhost:4000/feed.xml</id><title type="html">Federico Speranza</title><subtitle>Statistical modelling and data analysis</subtitle><entry><title type="html">Football</title><link href="http://localhost:4000/blog/Football" rel="alternate" type="text/html" title="Football" /><published>2025-04-01T00:00:00+01:00</published><updated>2025-04-01T00:00:00+01:00</updated><id>http://localhost:4000/blog/Football</id><content type="html" xml:base="http://localhost:4000/blog/Football"><![CDATA[<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">pandas</span> <span class="k">as</span> <span class="n">pd</span>
<span class="kn">from</span> <span class="n">matplotlib</span> <span class="kn">import</span> <span class="n">pyplot</span> <span class="k">as</span> <span class="n">plt</span>

<span class="kn">from</span> <span class="n">utils</span> <span class="kn">import</span> <span class="o">*</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">teams</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">teams.csv</span><span class="sh">'</span><span class="p">)</span>
<span class="n">results</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">results.csv</span><span class="sh">'</span><span class="p">)</span>
<span class="n">fixtures</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">fixtures.csv</span><span class="sh">'</span><span class="p">)</span>
<span class="n">players</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">players.csv</span><span class="sh">'</span><span class="p">)</span>
<span class="n">startingXI</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">startingXI.csv</span><span class="sh">'</span><span class="p">)</span>
<span class="n">odds</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">read_csv</span><span class="p">(</span><span class="sh">'</span><span class="s">odds.csv</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<h1 id="exploring-the-first-season">Exploring the First Season</h1>

<h2 id="which-team-won-the-league-in-the-first-season"><em>Which team won the league in the first season?</em></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">MAX_WEEK</span> <span class="o">=</span> <span class="mi">54</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">results</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">SeasonID</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>SeasonID</th>
      <th>Gameweek</th>
      <th>MatchID</th>
      <th>HomeTeamID</th>
      <th>HomeScore</th>
      <th>HomeShots</th>
      <th>AwayTeamID</th>
      <th>AwayScore</th>
      <th>AwayShots</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>1</td>
      <td>1</td>
      <td>1</td>
      <td>7</td>
      <td>1</td>
      <td>17</td>
      <td>1</td>
      <td>1</td>
      <td>12</td>
    </tr>
    <tr>
      <th>1</th>
      <td>1</td>
      <td>1</td>
      <td>2</td>
      <td>6</td>
      <td>1</td>
      <td>8</td>
      <td>8</td>
      <td>3</td>
      <td>17</td>
    </tr>
    <tr>
      <th>2</th>
      <td>1</td>
      <td>1</td>
      <td>3</td>
      <td>5</td>
      <td>5</td>
      <td>21</td>
      <td>9</td>
      <td>1</td>
      <td>7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>1</td>
      <td>1</td>
      <td>4</td>
      <td>4</td>
      <td>2</td>
      <td>25</td>
      <td>10</td>
      <td>0</td>
      <td>8</td>
    </tr>
    <tr>
      <th>4</th>
      <td>1</td>
      <td>1</td>
      <td>5</td>
      <td>3</td>
      <td>3</td>
      <td>13</td>
      <td>11</td>
      <td>3</td>
      <td>19</td>
    </tr>
    <tr>
      <th>...</th>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
      <td>...</td>
    </tr>
    <tr>
      <th>751</th>
      <td>1</td>
      <td>54</td>
      <td>752</td>
      <td>17</td>
      <td>1</td>
      <td>15</td>
      <td>26</td>
      <td>2</td>
      <td>9</td>
    </tr>
    <tr>
      <th>752</th>
      <td>1</td>
      <td>54</td>
      <td>753</td>
      <td>18</td>
      <td>2</td>
      <td>12</td>
      <td>25</td>
      <td>0</td>
      <td>9</td>
    </tr>
    <tr>
      <th>753</th>
      <td>1</td>
      <td>54</td>
      <td>754</td>
      <td>19</td>
      <td>3</td>
      <td>21</td>
      <td>24</td>
      <td>1</td>
      <td>6</td>
    </tr>
    <tr>
      <th>754</th>
      <td>1</td>
      <td>54</td>
      <td>755</td>
      <td>20</td>
      <td>0</td>
      <td>8</td>
      <td>23</td>
      <td>2</td>
      <td>6</td>
    </tr>
    <tr>
      <th>755</th>
      <td>1</td>
      <td>54</td>
      <td>756</td>
      <td>21</td>
      <td>1</td>
      <td>21</td>
      <td>22</td>
      <td>0</td>
      <td>12</td>
    </tr>
  </tbody>
</table>
<p>756 rows Ã— 9 columns</p>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">results_season1</span> <span class="o">=</span> <span class="nf">initialise_table</span><span class="p">(</span><span class="n">teams</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">table_gameweek54</span> <span class="o">=</span> <span class="nf">generate_gameweek_table</span><span class="p">(</span><span class="n">results</span><span class="p">,</span> <span class="n">results_season1</span><span class="p">,</span> <span class="n">gameweek</span><span class="o">=</span><span class="mi">54</span><span class="p">,</span> <span class="n">seasonID</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">table_gameweek54</span><span class="p">.</span><span class="nf">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="sh">'</span><span class="s">Points</span><span class="sh">'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TeamName</th>
      <th>TeamID</th>
      <th>Gameweek</th>
      <th>Points</th>
      <th>GF</th>
      <th>GA</th>
      <th>DIFF</th>
      <th>W</th>
      <th>D</th>
      <th>L</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>14</th>
      <td>Miami</td>
      <td>15</td>
      <td>54</td>
      <td>138</td>
      <td>159</td>
      <td>41</td>
      <td>118</td>
      <td>44</td>
      <td>6</td>
      <td>4</td>
    </tr>
    <tr>
      <th>7</th>
      <td>Cincinnati</td>
      <td>8</td>
      <td>54</td>
      <td>125</td>
      <td>130</td>
      <td>51</td>
      <td>79</td>
      <td>39</td>
      <td>8</td>
      <td>7</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Baltimore</td>
      <td>4</td>
      <td>54</td>
      <td>117</td>
      <td>136</td>
      <td>41</td>
      <td>95</td>
      <td>35</td>
      <td>12</td>
      <td>7</td>
    </tr>
    <tr>
      <th>18</th>
      <td>New York S</td>
      <td>19</td>
      <td>54</td>
      <td>113</td>
      <td>108</td>
      <td>52</td>
      <td>56</td>
      <td>34</td>
      <td>11</td>
      <td>9</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Boston</td>
      <td>5</td>
      <td>54</td>
      <td>106</td>
      <td>130</td>
      <td>58</td>
      <td>72</td>
      <td>31</td>
      <td>13</td>
      <td>10</td>
    </tr>
    <tr>
      <th>26</th>
      <td>Seattle</td>
      <td>27</td>
      <td>54</td>
      <td>105</td>
      <td>118</td>
      <td>64</td>
      <td>54</td>
      <td>31</td>
      <td>12</td>
      <td>11</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Chicago B</td>
      <td>6</td>
      <td>54</td>
      <td>105</td>
      <td>110</td>
      <td>56</td>
      <td>54</td>
      <td>32</td>
      <td>9</td>
      <td>13</td>
    </tr>
    <tr>
      <th>20</th>
      <td>Oakland</td>
      <td>21</td>
      <td>54</td>
      <td>96</td>
      <td>98</td>
      <td>66</td>
      <td>32</td>
      <td>27</td>
      <td>15</td>
      <td>12</td>
    </tr>
    <tr>
      <th>6</th>
      <td>Chicago H</td>
      <td>7</td>
      <td>54</td>
      <td>95</td>
      <td>97</td>
      <td>75</td>
      <td>22</td>
      <td>28</td>
      <td>11</td>
      <td>15</td>
    </tr>
    <tr>
      <th>23</th>
      <td>St. Louis</td>
      <td>24</td>
      <td>54</td>
      <td>94</td>
      <td>108</td>
      <td>62</td>
      <td>46</td>
      <td>27</td>
      <td>13</td>
      <td>14</td>
    </tr>
    <tr>
      <th>21</th>
      <td>Philadelphia</td>
      <td>22</td>
      <td>54</td>
      <td>82</td>
      <td>76</td>
      <td>64</td>
      <td>12</td>
      <td>24</td>
      <td>10</td>
      <td>20</td>
    </tr>
    <tr>
      <th>22</th>
      <td>Pittsburgh</td>
      <td>23</td>
      <td>54</td>
      <td>80</td>
      <td>86</td>
      <td>89</td>
      <td>-3</td>
      <td>24</td>
      <td>8</td>
      <td>22</td>
    </tr>
    <tr>
      <th>0</th>
      <td>Arlington</td>
      <td>1</td>
      <td>54</td>
      <td>77</td>
      <td>80</td>
      <td>60</td>
      <td>20</td>
      <td>21</td>
      <td>14</td>
      <td>19</td>
    </tr>
    <tr>
      <th>16</th>
      <td>Minneapolis</td>
      <td>17</td>
      <td>54</td>
      <td>76</td>
      <td>89</td>
      <td>71</td>
      <td>18</td>
      <td>22</td>
      <td>10</td>
      <td>22</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Detroit</td>
      <td>11</td>
      <td>54</td>
      <td>76</td>
      <td>79</td>
      <td>75</td>
      <td>4</td>
      <td>21</td>
      <td>13</td>
      <td>20</td>
    </tr>
    <tr>
      <th>27</th>
      <td>Toronto</td>
      <td>28</td>
      <td>54</td>
      <td>72</td>
      <td>70</td>
      <td>73</td>
      <td>-3</td>
      <td>19</td>
      <td>15</td>
      <td>20</td>
    </tr>
    <tr>
      <th>12</th>
      <td>Kansas City</td>
      <td>13</td>
      <td>54</td>
      <td>70</td>
      <td>77</td>
      <td>76</td>
      <td>1</td>
      <td>18</td>
      <td>16</td>
      <td>20</td>
    </tr>
    <tr>
      <th>17</th>
      <td>Montreal</td>
      <td>18</td>
      <td>54</td>
      <td>66</td>
      <td>63</td>
      <td>94</td>
      <td>-31</td>
      <td>19</td>
      <td>9</td>
      <td>26</td>
    </tr>
    <tr>
      <th>13</th>
      <td>Los Angeles</td>
      <td>14</td>
      <td>54</td>
      <td>63</td>
      <td>63</td>
      <td>93</td>
      <td>-30</td>
      <td>17</td>
      <td>12</td>
      <td>25</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Atlanta</td>
      <td>3</td>
      <td>54</td>
      <td>56</td>
      <td>68</td>
      <td>106</td>
      <td>-38</td>
      <td>13</td>
      <td>17</td>
      <td>24</td>
    </tr>
    <tr>
      <th>11</th>
      <td>Houston</td>
      <td>12</td>
      <td>54</td>
      <td>54</td>
      <td>63</td>
      <td>110</td>
      <td>-47</td>
      <td>14</td>
      <td>12</td>
      <td>28</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Cleveland Queens</td>
      <td>9</td>
      <td>54</td>
      <td>52</td>
      <td>51</td>
      <td>91</td>
      <td>-40</td>
      <td>14</td>
      <td>10</td>
      <td>30</td>
    </tr>
    <tr>
      <th>25</th>
      <td>San Francisco</td>
      <td>26</td>
      <td>54</td>
      <td>37</td>
      <td>47</td>
      <td>114</td>
      <td>-67</td>
      <td>8</td>
      <td>13</td>
      <td>33</td>
    </tr>
    <tr>
      <th>9</th>
      <td>Denver</td>
      <td>10</td>
      <td>54</td>
      <td>35</td>
      <td>43</td>
      <td>123</td>
      <td>-80</td>
      <td>9</td>
      <td>8</td>
      <td>37</td>
    </tr>
    <tr>
      <th>24</th>
      <td>San Diego</td>
      <td>25</td>
      <td>54</td>
      <td>34</td>
      <td>41</td>
      <td>133</td>
      <td>-92</td>
      <td>8</td>
      <td>10</td>
      <td>36</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Anaheim</td>
      <td>2</td>
      <td>54</td>
      <td>32</td>
      <td>43</td>
      <td>130</td>
      <td>-87</td>
      <td>7</td>
      <td>11</td>
      <td>36</td>
    </tr>
    <tr>
      <th>15</th>
      <td>Milwaukee</td>
      <td>16</td>
      <td>54</td>
      <td>32</td>
      <td>53</td>
      <td>120</td>
      <td>-67</td>
      <td>6</td>
      <td>14</td>
      <td>34</td>
    </tr>
    <tr>
      <th>19</th>
      <td>New York C</td>
      <td>20</td>
      <td>54</td>
      <td>21</td>
      <td>47</td>
      <td>145</td>
      <td>-98</td>
      <td>5</td>
      <td>6</td>
      <td>43</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="miami-wins-the-first-season">Miami wins the first season</h3>

<hr />

<h2 id="at-what-point-in-the-season-did-that-team-secure-their-league-title"><em>At what point in the season did that team secure their league title?</em></h2>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">gameweek_secure</span> <span class="o">=</span> <span class="bp">None</span>

<span class="k">for</span> <span class="n">w</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="n">MAX_WEEK</span><span class="o">+</span><span class="mi">1</span><span class="p">):</span>
    <span class="n">table_gameweek</span> <span class="o">=</span> <span class="nf">generate_gameweek_table</span><span class="p">(</span><span class="n">results</span><span class="p">,</span> <span class="n">results_season1</span><span class="p">,</span> <span class="n">gameweek</span><span class="o">=</span><span class="n">w</span><span class="p">,</span> <span class="n">seasonID</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
    <span class="n">gameweek_secure</span> <span class="o">=</span> <span class="nf">secure_season</span><span class="p">(</span><span class="n">table_gameweek</span><span class="p">)</span>
    
    <span class="k">if</span> <span class="n">gameweek_secure</span> <span class="ow">is</span> <span class="ow">not</span> <span class="bp">None</span><span class="p">:</span>
        <span class="k">break</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nf">print</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">Miami secure the league at the </span><span class="si">{</span><span class="n">gameweek_secure</span><span class="si">}</span><span class="s">th gameweek</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Miami secure the league at the 50th gameweek
</code></pre></div></div>

<p>Miami secure the league at the 50th gameweek</p>

<p>The way I am calculating when Miami (winner of the season as the previous question) secure the season, is based on the comparison between the first and the second team's points in the standing after every gameweek. At each iteration within the "secure_season" method, I assume all losses for the first team in the standing and all wins for the second. If the gap in points is larger than 0, it means that the first team at that gameweek secures the seaon.</p>

<p>A more comprehensive check could be done also comparing head-to-head mathes in the case two teams have the same exact points at the end of a gameweek. If that check is tied,  a further one can be done on the goal differences. The team with higher goal differences secures the season.</p>

<p>In this mock dataset, the above-two scenarios do not occur so I decided to implement the method to check just the difference in points.</p>

<h2 id="what-result-was-the-biggest-upset">What result was the biggest upset?</h2>

<p>I decide the biggest upset in terms of result is the less likely to happen. At this stage, the information we have on probabilities are the odds provided by the bookmaker.</p>

<p>Although the odds are not the probability of an outcome to occur, we can leverage that:</p>

\[P(\text{outcome}) \propto \frac{1}{\text{Odds}}\]

<p>I am going through the results of the season and getting the odd relative to the outcome. Then, I select the match with the highest odd.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">get_actual_odds</span><span class="p">(</span><span class="n">row</span><span class="p">):</span>
    <span class="k">if</span> <span class="n">row</span><span class="p">[</span><span class="sh">'</span><span class="s">Outcome</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">row</span><span class="p">[</span><span class="sh">'</span><span class="s">Home</span><span class="sh">'</span><span class="p">]</span>
    <span class="k">elif</span> <span class="n">row</span><span class="p">[</span><span class="sh">'</span><span class="s">Outcome</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="o">-</span><span class="mi">1</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">row</span><span class="p">[</span><span class="sh">'</span><span class="s">Away</span><span class="sh">'</span><span class="p">]</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="k">return</span> <span class="n">row</span><span class="p">[</span><span class="sh">'</span><span class="s">Draw</span><span class="sh">'</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">df_season1</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">SeasonID</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span> <span class="mi">1</span><span class="p">)].</span><span class="nf">copy</span><span class="p">()</span>
<span class="n">df_season1</span><span class="p">[</span><span class="sh">'</span><span class="s">Outcome</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">df_season1</span><span class="p">.</span><span class="nf">apply</span><span class="p">(</span><span class="n">determine_outcome</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>

<span class="n">merged</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">merge</span><span class="p">(</span><span class="n">odds</span><span class="p">,</span> <span class="n">df_season1</span><span class="p">,</span> <span class="n">on</span><span class="o">=</span><span class="sh">'</span><span class="s">MatchID</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">merged</span><span class="p">[</span><span class="sh">'</span><span class="s">ActualOdds</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">merged</span><span class="p">.</span><span class="nf">apply</span><span class="p">(</span><span class="n">get_actual_odds</span><span class="p">,</span> <span class="n">axis</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">merged</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">merged</span><span class="p">[</span><span class="sh">'</span><span class="s">ActualOdds</span><span class="sh">'</span><span class="p">].</span><span class="nf">idxmax</span><span class="p">()]</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MatchID       168.00
Home            1.03
Draw           23.35
Away           75.22
SeasonID        1.00
Gameweek       12.00
HomeTeamID     15.00
HomeScore       3.00
HomeShots      38.00
AwayTeamID     16.00
AwayScore       3.00
AwayShots      10.00
Outcome         0.00
ActualOdds     23.35
Name: 167, dtype: float64
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">odds</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">odds</span><span class="p">[</span><span class="sh">'</span><span class="s">MatchID</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">168</span><span class="p">]</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>MatchID</th>
      <th>Home</th>
      <th>Draw</th>
      <th>Away</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>167</th>
      <td>168</td>
      <td>1.03</td>
      <td>23.35</td>
      <td>75.22</td>
    </tr>
  </tbody>
</table>
</div>

<h3 id="the-result-which-was-the-biggest-upset-is-a-match-between-miami-home-team-and-minneapolis-away-team-where-the-outcome-was-a-draw">The result which was the biggest upset is a match between Miami (Home team) and Minneapolis (Away team) where the outcome was a Draw</h3>

<hr />
<hr />

<h1 id="predicting-the-second-season">Predicting the second season</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">team15_home</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">SeasonID</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">HomeTeamID</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span><span class="mi">15</span><span class="p">)][</span><span class="sh">'</span><span class="s">HomeScore</span><span class="sh">'</span><span class="p">].</span><span class="n">values</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">team15_away</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">SeasonID</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">)</span> <span class="o">&amp;</span> <span class="p">(</span><span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">AwayTeamID</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span><span class="mi">15</span><span class="p">)][</span><span class="sh">'</span><span class="s">AwayScore</span><span class="sh">'</span><span class="p">].</span><span class="n">values</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">hist</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">concatenate</span><span class="p">((</span><span class="n">team15_home</span><span class="p">,</span> <span class="n">team15_away</span><span class="p">)),</span> <span class="n">bins</span><span class="o">=</span><span class="mi">20</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Goals</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Counts</span><span class="sh">'</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>
</code></pre></div></div>

<p><img src="/assets/images/post_football/output_28_0.png" alt="png" /></p>

<p>The plot above shows an example of the distribution of goals scored by Miami throughout the season. The distribution resambles a Poisson distribution with mean \(\lambda\) somewhere between 2 and 3.</p>

<p>This is in line with studies I could find in the literature about modelling the outcomes of matches during a football season.</p>

<p>For this reason, I decided to start off implementing a model based on the assumption that the goals scored by each team during a match follow a Poisson distribution, and they are independent.</p>

<p>Along the line of the Dixon-Coles' model, I modelled the likelihood for the home and away team goals as following:</p>

\[P(x; \lambda)=\frac{\lambda^x e^{-\lambda}}{x!}\]

<p>where \(x\) is the goals scored in the match, and \(\lambda = \alpha_h \beta_a \gamma\)
(with index h: home team, a: away team)
with \(\alpha\): attack strenght, \(\beta\) : defence strenght, \(\gamma\): home factor</p>

<p>To ensure that lambda is always positive, I fit for:
\(\log(\lambda) = \log(\alpha_h) + \log(\beta_a) + \log(\gamma)\) \(\rightarrow\) \(\lambda = e^{\alpha_h + \beta_a + \gamma}\)
where I re-defined, for writing semplicity, \(\log(\alpha) = \alpha\), \(\log(\beta) = \beta\), \(\log(\gamma) = \gamma\), so I am actually fitting for the log of the parameters.</p>

<p>The total likelihood would result in:</p>
<h3 id="mathcallxy--mathbfthetaprod_i1n-taurhofracex_ileftalpha_h_ibeta_a-igammaright-e-ealpha_n_ibeta_a-igammax_i-fracey_ileftalpha_a-ibeta_h-iright-e-ealpha_abeta_h-iy">\(\mathcal{L}(x,y | \mathbf{\theta})=\prod_{i=1}^N \tau(\rho)\frac{e^{x_i\left(\alpha_{h_i}+\beta_{a, i}+\gamma\right)} e^{-e^{\alpha_{n_i}+\beta_{a i}+\gamma}}}{x_{i}!} \frac{e^{y_i\left(\alpha_{a, i}+\beta_{h, i}\right)} e^{-e^{\alpha_{a,}+\beta_{h, i}}}}{y!}\)</h3>

<p>where \(N\) is the number of matches in season 1, and \(\tau(\rho)\) is a function which takes into account correlations between results \(0-0\), \(1-0\), \(0-1\), \(1-1\).</p>

<p>The log-likelihood is:</p>

\[\log \mathcal{L}=\sum_{i=1}^N \log(\tau) + x_i\left(\alpha_{h, i}+\beta_{a_i}+\gamma\right)-e^{\left(\alpha_{h_i}+\beta_{a, i}+\gamma\right)} +y_i\left(\alpha_{a_i,}+\beta_{h,i}\right)-e^{\alpha_{a_i}+\beta_{h i}}-\log \left(x_i!\right) \left.-\log \left(y_{i!}\right)\right)\]

<p>I then sample the posterior distribution of the parameters using MCMC sampler based on the Bayes Theorem:</p>

\[P(\theta \mid x, y) \propto \mathcal{L}(x, y \mid \theta) \cdot \pi(\theta)\]

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">emcee</span>
<span class="kn">from</span> <span class="n">multiprocessing</span> <span class="kn">import</span> <span class="n">Pool</span><span class="p">,</span> <span class="n">cpu_count</span>

<span class="kn">from</span> <span class="n">emcee_func</span> <span class="kn">import</span> <span class="o">*</span>


<span class="n">alpha</span><span class="p">,</span> <span class="n">beta</span> <span class="o">=</span> <span class="nf">generate_initial_alpha</span><span class="p">(</span><span class="n">table_gameweek54</span><span class="p">)</span>
<span class="n">gamma</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">full</span><span class="p">(</span><span class="mi">28</span><span class="p">,.</span><span class="mi">2</span><span class="p">)</span>
<span class="n">rho</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">full</span><span class="p">(</span><span class="mi">28</span><span class="p">,</span><span class="o">-</span><span class="p">.</span><span class="mi">2</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">alpha</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="nf">sum</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">alpha</span><span class="p">))</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(array([-0.04067913, -0.66150565, -0.20319806,  0.48994912,  0.44482869,
         0.2777746 ,  0.15200522,  0.44482869, -0.49088013, -0.66150565,
        -0.05325791, -0.27957104, -0.07890034, -0.27957104,  0.64619844,
        -0.45241385,  0.06593061, -0.27957104,  0.25942547, -0.57255816,
         0.16226172, -0.09197242,  0.03164153,  0.25942547, -0.7091337 ,
        -0.57255816,  0.34797886, -0.17421052]),
 28.0)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">theta</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">concatenate</span><span class="p">([</span><span class="n">alpha</span><span class="p">[:</span><span class="mi">27</span><span class="p">],</span> <span class="n">beta</span><span class="p">,</span> <span class="p">[</span><span class="n">gamma</span><span class="p">[</span><span class="mi">0</span><span class="p">]],</span> <span class="p">[</span><span class="n">rho</span><span class="p">[</span><span class="mi">0</span><span class="p">]]])</span>
<span class="n">pos</span> <span class="o">=</span> <span class="n">theta</span> <span class="o">+</span> <span class="mf">1e-4</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">randn</span><span class="p">(</span><span class="mi">300</span><span class="p">,</span> <span class="mi">57</span><span class="p">)</span>
<span class="n">nwalkers</span><span class="p">,</span> <span class="n">ndim</span> <span class="o">=</span> <span class="n">pos</span><span class="p">.</span><span class="n">shape</span>

<span class="n">filename</span> <span class="o">=</span> <span class="sh">"</span><span class="s">mcmc_run.h5</span><span class="sh">"</span>

<span class="c1">#if you want to run the parallelised MCMC just set run = True
# estimated time ~ 5 mins on 4 CPUs
</span><span class="n">run</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">if</span> <span class="n">run</span><span class="p">:</span>
    <span class="n">backend</span> <span class="o">=</span> <span class="n">emcee</span><span class="p">.</span><span class="n">backends</span><span class="p">.</span><span class="nc">HDFBackend</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>
    <span class="n">backend</span><span class="p">.</span><span class="nf">reset</span><span class="p">(</span><span class="n">nwalkers</span><span class="p">,</span> <span class="n">ndim</span><span class="p">)</span>

    <span class="k">with</span> <span class="nc">Pool</span><span class="p">(</span><span class="n">processes</span><span class="o">=</span><span class="nf">int</span><span class="p">(</span><span class="nf">cpu_count</span><span class="p">()</span><span class="o">/</span><span class="mi">3</span><span class="p">))</span> <span class="k">as</span> <span class="n">pool</span><span class="p">:</span>

        <span class="n">sampler</span> <span class="o">=</span> <span class="n">emcee</span><span class="p">.</span><span class="nc">EnsembleSampler</span><span class="p">(</span><span class="n">nwalkers</span><span class="p">,</span> <span class="n">ndim</span><span class="p">,</span> <span class="n">posterior</span><span class="p">,</span> <span class="n">args</span><span class="o">=</span><span class="p">(</span><span class="n">results</span><span class="p">,),</span> 
                                        <span class="n">backend</span><span class="o">=</span><span class="n">backend</span><span class="p">,</span> <span class="n">pool</span><span class="o">=</span><span class="n">pool</span><span class="p">)</span>
        <span class="n">sampler</span><span class="p">.</span><span class="nf">run_mcmc</span><span class="p">(</span><span class="n">pos</span><span class="p">,</span> <span class="mi">200</span><span class="p">,</span> <span class="n">progress</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">skip_initial_state_check</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="n">rcParams</span><span class="p">[</span><span class="sh">'</span><span class="s">text.usetex</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="bp">False</span>

<span class="n">reader</span> <span class="o">=</span> <span class="n">emcee</span><span class="p">.</span><span class="n">backends</span><span class="p">.</span><span class="nc">HDFBackend</span><span class="p">(</span><span class="n">filename</span><span class="p">)</span>


<span class="n">samples</span> <span class="o">=</span> <span class="n">reader</span><span class="p">.</span><span class="nf">get_chain</span><span class="p">()</span>
<span class="n">alpha_labels</span> <span class="o">=</span> <span class="p">[</span><span class="sa">fr</span><span class="sh">'</span><span class="s">$\alpha_</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s">$</span><span class="sh">'</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">27</span><span class="p">)]</span>
<span class="n">beta_labels</span> <span class="o">=</span> <span class="p">[</span><span class="sa">fr</span><span class="sh">'</span><span class="s">$\beta_</span><span class="si">{</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="si">}</span><span class="s">$</span><span class="sh">'</span> <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">28</span><span class="p">)]</span>
<span class="n">gamma_label</span> <span class="o">=</span> <span class="p">[</span><span class="sa">r</span><span class="sh">'</span><span class="s">$\gamma$</span><span class="sh">'</span><span class="p">]</span>
<span class="n">rho_label</span> <span class="o">=</span> <span class="p">[</span><span class="sa">r</span><span class="sh">'</span><span class="s">$\rho$</span><span class="sh">'</span><span class="p">]</span>


<span class="n">labels</span> <span class="o">=</span> <span class="n">alpha_labels</span> <span class="o">+</span> <span class="n">beta_labels</span> <span class="o">+</span> <span class="n">gamma_label</span> <span class="o">+</span> <span class="n">rho_label</span>

<span class="n">chain_plot</span> <span class="o">=</span> <span class="bp">False</span>
<span class="k">if</span> <span class="n">chain_plot</span><span class="p">:</span>
    <span class="n">fig</span><span class="p">,</span> <span class="n">axes</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="n">ndim</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">10</span><span class="p">,</span> <span class="mi">50</span><span class="p">),</span> <span class="n">sharex</span><span class="o">=</span><span class="bp">True</span><span class="p">)</span>
    <span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">ndim</span><span class="p">):</span>
        <span class="n">ax</span> <span class="o">=</span> <span class="n">axes</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
        <span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">samples</span><span class="p">[:,</span> <span class="p">:,</span> <span class="n">i</span><span class="p">],</span> <span class="sh">"</span><span class="s">k</span><span class="sh">"</span><span class="p">,</span> <span class="n">alpha</span><span class="o">=</span><span class="mf">0.3</span><span class="p">)</span>
        <span class="n">ax</span><span class="p">.</span><span class="nf">set_xlim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="nf">len</span><span class="p">(</span><span class="n">samples</span><span class="p">))</span>
        <span class="n">ax</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="n">labels</span><span class="p">[</span><span class="n">i</span><span class="p">])</span>
        <span class="n">ax</span><span class="p">.</span><span class="n">yaxis</span><span class="p">.</span><span class="nf">set_label_coords</span><span class="p">(</span><span class="o">-</span><span class="mf">0.1</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">)</span>

    <span class="n">axes</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">].</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="sh">"</span><span class="s">step number</span><span class="sh">"</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">corner</span>

<span class="n">flat_samples</span> <span class="o">=</span> <span class="n">reader</span><span class="p">.</span><span class="nf">get_chain</span><span class="p">(</span><span class="n">discard</span><span class="o">=</span><span class="mi">100</span><span class="p">,</span> <span class="n">flat</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">thin</span><span class="o">=</span><span class="mi">15</span><span class="p">)</span>

<span class="n">corner_plot</span><span class="o">=</span><span class="bp">False</span>
<span class="k">if</span> <span class="n">corner_plot</span><span class="p">:</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">100</span><span class="p">,</span><span class="mi">100</span><span class="p">))</span>
    <span class="n">corner</span><span class="p">.</span><span class="nf">corner</span><span class="p">(</span>
        <span class="n">flat_samples</span><span class="p">,</span> <span class="n">labels</span><span class="o">=</span><span class="n">labels</span>
    <span class="p">);</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">mcmc_params</span> <span class="o">=</span> <span class="p">[]</span>
<span class="k">for</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">ndim</span><span class="p">):</span>
    <span class="n">mcmc</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">percentile</span><span class="p">(</span><span class="n">flat_samples</span><span class="p">[:,</span> <span class="n">i</span><span class="p">],</span> <span class="p">[</span><span class="mi">16</span><span class="p">,</span> <span class="mi">50</span><span class="p">,</span> <span class="mi">84</span><span class="p">])</span>
    <span class="n">mcmc_params</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">mcmc</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">teams_params</span> <span class="o">=</span> <span class="n">teams</span><span class="p">.</span><span class="nf">copy</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">alpha_last</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">log</span><span class="p">(</span><span class="mi">28</span><span class="o">-</span><span class="n">np</span><span class="p">.</span><span class="nf">sum</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">mcmc_params</span><span class="p">)[:,</span><span class="mi">1</span><span class="p">][:</span><span class="mi">27</span><span class="p">])))</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">alpha_fit</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">mcmc_params</span><span class="p">)[:,</span><span class="mi">1</span><span class="p">][:</span><span class="mi">27</span><span class="p">],</span> <span class="n">alpha_last</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1"># double-check on the constraint of the alpha parameters
</span><span class="n">alpha_fit</span><span class="p">,</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">alpha_fit</span><span class="p">).</span><span class="nf">sum</span><span class="p">()</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>(array([ 0.01157139, -0.70069541, -0.22605872,  0.43342521,  0.42870471,
         0.28406565,  0.13479957,  0.42948154, -0.44563419, -0.66020374,
        -0.08065429, -0.26276242, -0.06613465, -0.28443025,  0.60082144,
        -0.44787918,  0.02732347, -0.26825249,  0.28126603, -0.50877606,
         0.07814694, -0.06494013,  0.08062334,  0.26246163, -0.66441535,
        -0.61218524,  0.32294525,  0.04768519]),
 28.0)
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">teams_params</span><span class="p">[</span><span class="sh">'</span><span class="s">alpha</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">alpha_fit</span>
<span class="n">teams_params</span><span class="p">[</span><span class="sh">'</span><span class="s">beta</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="n">mcmc_params</span><span class="p">)[:,</span><span class="mi">1</span><span class="p">][</span><span class="mi">27</span><span class="p">:</span><span class="mi">55</span><span class="p">]</span>
<span class="n">gamma_fit</span> <span class="o">=</span> <span class="n">mcmc_params</span><span class="p">[</span><span class="o">-</span><span class="mi">2</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
<span class="n">rho_fit</span> <span class="o">=</span> <span class="n">mcmc_params</span><span class="p">[</span><span class="o">-</span><span class="mi">1</span><span class="p">][</span><span class="mi">1</span><span class="p">]</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">teams_params</span>
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TeamName</th>
      <th>TeamID</th>
      <th>alpha</th>
      <th>beta</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Arlington</td>
      <td>1</td>
      <td>0.011571</td>
      <td>-0.256435</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Anaheim</td>
      <td>2</td>
      <td>-0.700695</td>
      <td>0.480804</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Atlanta</td>
      <td>3</td>
      <td>-0.226059</td>
      <td>0.251540</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Baltimore</td>
      <td>4</td>
      <td>0.433425</td>
      <td>-0.659432</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Boston</td>
      <td>5</td>
      <td>0.428705</td>
      <td>-0.321781</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Chicago B</td>
      <td>6</td>
      <td>0.284066</td>
      <td>-0.359794</td>
    </tr>
    <tr>
      <th>6</th>
      <td>Chicago H</td>
      <td>7</td>
      <td>0.134800</td>
      <td>-0.126519</td>
    </tr>
    <tr>
      <th>7</th>
      <td>Cincinnati</td>
      <td>8</td>
      <td>0.429482</td>
      <td>-0.511153</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Cleveland Queens</td>
      <td>9</td>
      <td>-0.445634</td>
      <td>0.082527</td>
    </tr>
    <tr>
      <th>9</th>
      <td>Denver</td>
      <td>10</td>
      <td>-0.660204</td>
      <td>0.454534</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Detroit</td>
      <td>11</td>
      <td>-0.080654</td>
      <td>-0.031592</td>
    </tr>
    <tr>
      <th>11</th>
      <td>Houston</td>
      <td>12</td>
      <td>-0.262762</td>
      <td>0.347867</td>
    </tr>
    <tr>
      <th>12</th>
      <td>Kansas City</td>
      <td>13</td>
      <td>-0.066135</td>
      <td>-0.099961</td>
    </tr>
    <tr>
      <th>13</th>
      <td>Los Angeles</td>
      <td>14</td>
      <td>-0.284430</td>
      <td>0.201080</td>
    </tr>
    <tr>
      <th>14</th>
      <td>Miami</td>
      <td>15</td>
      <td>0.600821</td>
      <td>-0.705102</td>
    </tr>
    <tr>
      <th>15</th>
      <td>Milwaukee</td>
      <td>16</td>
      <td>-0.447879</td>
      <td>0.358513</td>
    </tr>
    <tr>
      <th>16</th>
      <td>Minneapolis</td>
      <td>17</td>
      <td>0.027323</td>
      <td>-0.103217</td>
    </tr>
    <tr>
      <th>17</th>
      <td>Montreal</td>
      <td>18</td>
      <td>-0.268252</td>
      <td>0.181667</td>
    </tr>
    <tr>
      <th>18</th>
      <td>New York S</td>
      <td>19</td>
      <td>0.281266</td>
      <td>-0.476706</td>
    </tr>
    <tr>
      <th>19</th>
      <td>New York C</td>
      <td>20</td>
      <td>-0.508776</td>
      <td>0.611855</td>
    </tr>
    <tr>
      <th>20</th>
      <td>Oakland</td>
      <td>21</td>
      <td>0.078147</td>
      <td>-0.237147</td>
    </tr>
    <tr>
      <th>21</th>
      <td>Philadelphia</td>
      <td>22</td>
      <td>-0.064940</td>
      <td>-0.274786</td>
    </tr>
    <tr>
      <th>22</th>
      <td>Pittsburgh</td>
      <td>23</td>
      <td>0.080623</td>
      <td>0.019089</td>
    </tr>
    <tr>
      <th>23</th>
      <td>St. Louis</td>
      <td>24</td>
      <td>0.262462</td>
      <td>-0.238121</td>
    </tr>
    <tr>
      <th>24</th>
      <td>San Diego</td>
      <td>25</td>
      <td>-0.664415</td>
      <td>0.501774</td>
    </tr>
    <tr>
      <th>25</th>
      <td>San Francisco</td>
      <td>26</td>
      <td>-0.612185</td>
      <td>0.338035</td>
    </tr>
    <tr>
      <th>26</th>
      <td>Seattle</td>
      <td>27</td>
      <td>0.322945</td>
      <td>-0.228020</td>
    </tr>
    <tr>
      <th>27</th>
      <td>Toronto</td>
      <td>28</td>
      <td>0.047685</td>
      <td>-0.143611</td>
    </tr>
  </tbody>
</table>
</div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">from</span> <span class="n">IPython.display</span> <span class="kn">import</span> <span class="n">display</span><span class="p">,</span> <span class="n">Math</span>

<span class="nf">display</span><span class="p">(</span><span class="nc">Math</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">\gamma_{\text{fit}} = </span><span class="sh">'</span> <span class="o">+</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">gamma_fit</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="sh">"</span><span class="p">))</span>
<span class="nf">display</span><span class="p">(</span><span class="nc">Math</span><span class="p">(</span><span class="sa">r</span><span class="sh">'</span><span class="s">\rho_{\text{fit}} = </span><span class="sh">'</span> <span class="o">+</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">rho_fit</span><span class="si">:</span><span class="p">.</span><span class="mi">2</span><span class="n">f</span><span class="si">}</span><span class="sh">"</span><span class="p">))</span>
</code></pre></div></div>

\[\displaystyle \gamma_{\text{fit}} = 0.37\]

\[\displaystyle \rho_{\text{fit}} = -0.17\]

<hr />
<hr />

<h1 id="simulate-season-2">Simulate season 2</h1>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">importlib</span>
<span class="kn">import</span> <span class="n">simulation_func</span>
<span class="kn">from</span> <span class="n">simulation_func</span> <span class="kn">import</span> <span class="o">*</span>
<span class="n">importlib</span><span class="p">.</span><span class="nf">reload</span><span class="p">(</span><span class="n">simulation_func</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">final</span><span class="p">,</span> <span class="n">cumulatives_df</span><span class="p">,</span> <span class="n">position_counts</span> <span class="o">=</span> <span class="nf">simulate_n_season2</span><span class="p">(</span><span class="n">teams_params</span><span class="o">=</span><span class="n">teams_params</span><span class="p">,</span> <span class="n">gamma</span><span class="o">=</span><span class="n">gamma_fit</span><span class="p">,</span>
                   <span class="n">fixtures</span><span class="o">=</span><span class="n">fixtures</span><span class="p">,</span> <span class="n">teams</span><span class="o">=</span><span class="n">teams</span><span class="p">,</span> <span class="n">n_seasons</span><span class="o">=</span><span class="mi">50</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>100%|â–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆâ–ˆ| 50/50 [25:58&lt;00:00, 31.16s/it]
</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TeamName</th>
      <th>TeamID</th>
      <th>Gameweek</th>
      <th>Points</th>
      <th>GF</th>
      <th>GA</th>
      <th>DIFF</th>
      <th>W</th>
      <th>D</th>
      <th>L</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>14</th>
      <td>Miami</td>
      <td>15</td>
      <td>54</td>
      <td>125</td>
      <td>127</td>
      <td>32</td>
      <td>95</td>
      <td>38</td>
      <td>9</td>
      <td>6</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Baltimore</td>
      <td>4</td>
      <td>54</td>
      <td>117</td>
      <td>107</td>
      <td>33</td>
      <td>74</td>
      <td>35</td>
      <td>10</td>
      <td>7</td>
    </tr>
    <tr>
      <th>7</th>
      <td>Cincinnati</td>
      <td>8</td>
      <td>54</td>
      <td>113</td>
      <td>106</td>
      <td>38</td>
      <td>67</td>
      <td>34</td>
      <td>10</td>
      <td>8</td>
    </tr>
    <tr>
      <th>4</th>
      <td>Boston</td>
      <td>5</td>
      <td>54</td>
      <td>108</td>
      <td>107</td>
      <td>46</td>
      <td>60</td>
      <td>32</td>
      <td>10</td>
      <td>10</td>
    </tr>
    <tr>
      <th>19</th>
      <td>New York S</td>
      <td>19</td>
      <td>54</td>
      <td>105</td>
      <td>93</td>
      <td>38</td>
      <td>54</td>
      <td>31</td>
      <td>12</td>
      <td>10</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Chicago B</td>
      <td>6</td>
      <td>54</td>
      <td>100</td>
      <td>91</td>
      <td>45</td>
      <td>45</td>
      <td>29</td>
      <td>11</td>
      <td>12</td>
    </tr>
    <tr>
      <th>25</th>
      <td>Seattle</td>
      <td>27</td>
      <td>54</td>
      <td>98</td>
      <td>95</td>
      <td>53</td>
      <td>42</td>
      <td>29</td>
      <td>10</td>
      <td>13</td>
    </tr>
    <tr>
      <th>26</th>
      <td>St. Louis</td>
      <td>24</td>
      <td>54</td>
      <td>96</td>
      <td>87</td>
      <td>51</td>
      <td>35</td>
      <td>28</td>
      <td>12</td>
      <td>13</td>
    </tr>
    <tr>
      <th>20</th>
      <td>Oakland</td>
      <td>21</td>
      <td>54</td>
      <td>88</td>
      <td>73</td>
      <td>53</td>
      <td>19</td>
      <td>25</td>
      <td>13</td>
      <td>15</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Arlington</td>
      <td>1</td>
      <td>54</td>
      <td>86</td>
      <td>69</td>
      <td>49</td>
      <td>19</td>
      <td>24</td>
      <td>13</td>
      <td>16</td>
    </tr>
    <tr>
      <th>6</th>
      <td>Chicago H</td>
      <td>7</td>
      <td>54</td>
      <td>86</td>
      <td>77</td>
      <td>56</td>
      <td>21</td>
      <td>24</td>
      <td>12</td>
      <td>16</td>
    </tr>
    <tr>
      <th>27</th>
      <td>Toronto</td>
      <td>28</td>
      <td>54</td>
      <td>81</td>
      <td>71</td>
      <td>57</td>
      <td>13</td>
      <td>22</td>
      <td>13</td>
      <td>18</td>
    </tr>
    <tr>
      <th>21</th>
      <td>Philadelphia</td>
      <td>22</td>
      <td>54</td>
      <td>80</td>
      <td>63</td>
      <td>52</td>
      <td>11</td>
      <td>22</td>
      <td>14</td>
      <td>17</td>
    </tr>
    <tr>
      <th>16</th>
      <td>Minneapolis</td>
      <td>17</td>
      <td>54</td>
      <td>79</td>
      <td>69</td>
      <td>60</td>
      <td>9</td>
      <td>22</td>
      <td>13</td>
      <td>18</td>
    </tr>
    <tr>
      <th>22</th>
      <td>Pittsburgh</td>
      <td>23</td>
      <td>54</td>
      <td>79</td>
      <td>73</td>
      <td>66</td>
      <td>7</td>
      <td>22</td>
      <td>12</td>
      <td>19</td>
    </tr>
    <tr>
      <th>12</th>
      <td>Kansas City</td>
      <td>13</td>
      <td>54</td>
      <td>76</td>
      <td>63</td>
      <td>60</td>
      <td>3</td>
      <td>20</td>
      <td>14</td>
      <td>19</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Detroit</td>
      <td>11</td>
      <td>54</td>
      <td>75</td>
      <td>62</td>
      <td>63</td>
      <td>0</td>
      <td>20</td>
      <td>13</td>
      <td>19</td>
    </tr>
    <tr>
      <th>13</th>
      <td>Los Angeles</td>
      <td>14</td>
      <td>54</td>
      <td>57</td>
      <td>52</td>
      <td>81</td>
      <td>-28</td>
      <td>15</td>
      <td>12</td>
      <td>26</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Atlanta</td>
      <td>3</td>
      <td>54</td>
      <td>57</td>
      <td>52</td>
      <td>84</td>
      <td>-32</td>
      <td>14</td>
      <td>12</td>
      <td>26</td>
    </tr>
    <tr>
      <th>17</th>
      <td>Montreal</td>
      <td>18</td>
      <td>54</td>
      <td>56</td>
      <td>50</td>
      <td>79</td>
      <td>-28</td>
      <td>14</td>
      <td>12</td>
      <td>26</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Cleveland Queens</td>
      <td>9</td>
      <td>54</td>
      <td>56</td>
      <td>44</td>
      <td>71</td>
      <td>-26</td>
      <td>14</td>
      <td>13</td>
      <td>26</td>
    </tr>
    <tr>
      <th>11</th>
      <td>Houston</td>
      <td>12</td>
      <td>54</td>
      <td>51</td>
      <td>51</td>
      <td>94</td>
      <td>-42</td>
      <td>13</td>
      <td>11</td>
      <td>29</td>
    </tr>
    <tr>
      <th>15</th>
      <td>Milwaukee</td>
      <td>16</td>
      <td>54</td>
      <td>45</td>
      <td>43</td>
      <td>95</td>
      <td>-52</td>
      <td>10</td>
      <td>12</td>
      <td>30</td>
    </tr>
    <tr>
      <th>24</th>
      <td>San Francisco</td>
      <td>26</td>
      <td>54</td>
      <td>40</td>
      <td>36</td>
      <td>93</td>
      <td>-57</td>
      <td>9</td>
      <td>11</td>
      <td>32</td>
    </tr>
    <tr>
      <th>9</th>
      <td>Denver</td>
      <td>10</td>
      <td>54</td>
      <td>33</td>
      <td>33</td>
      <td>108</td>
      <td>-74</td>
      <td>7</td>
      <td>11</td>
      <td>35</td>
    </tr>
    <tr>
      <th>0</th>
      <td>Anaheim</td>
      <td>2</td>
      <td>54</td>
      <td>33</td>
      <td>34</td>
      <td>111</td>
      <td>-76</td>
      <td>7</td>
      <td>11</td>
      <td>35</td>
    </tr>
    <tr>
      <th>18</th>
      <td>New York C</td>
      <td>20</td>
      <td>54</td>
      <td>32</td>
      <td>40</td>
      <td>126</td>
      <td>-86</td>
      <td>7</td>
      <td>8</td>
      <td>37</td>
    </tr>
    <tr>
      <th>23</th>
      <td>San Diego</td>
      <td>25</td>
      <td>54</td>
      <td>32</td>
      <td>33</td>
      <td>110</td>
      <td>-77</td>
      <td>7</td>
      <td>10</td>
      <td>35</td>
    </tr>
  </tbody>
</table>
</div>

<p>The above table shows the final standing of the simulated season, over just 50 simulations as it is computationally time consuming. Ideally, I would run at least 1000 simulations. To simulate the seasons, I use the mean of the parameters extrapolated by the posterior distributions sampled.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">actual_results_season2</span> <span class="o">=</span> <span class="n">results</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">SeasonID</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="mi">2</span><span class="p">]</span>
<span class="n">actual_cumulative_points2</span> <span class="o">=</span> <span class="nf">cumulative_metric</span><span class="p">(</span><span class="n">actual_results_season2</span><span class="p">,</span> <span class="nf">initialise_table</span><span class="p">(</span><span class="n">teams</span><span class="p">),</span> 
                                              <span class="n">gameweek</span><span class="o">=</span><span class="mi">54</span><span class="p">,</span> <span class="n">seasonID</span><span class="o">=</span><span class="mi">2</span><span class="p">,</span> <span class="n">metric</span><span class="o">=</span><span class="sh">'</span><span class="s">Points</span><span class="sh">'</span><span class="p">)</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">standing_season2</span> <span class="o">=</span> <span class="nf">generate_gameweek_table</span><span class="p">(</span><span class="n">actual_results_season2</span><span class="p">,</span> <span class="nf">initialise_table</span><span class="p">(</span><span class="n">teams</span><span class="p">),</span>
                                           <span class="n">gameweek</span><span class="o">=</span><span class="mi">54</span><span class="p">,</span> <span class="n">seasonID</span><span class="o">=</span><span class="mi">2</span><span class="p">)</span>

<span class="n">standing_season2_sorted</span> <span class="o">=</span> <span class="n">standing_season2</span><span class="p">.</span><span class="nf">sort_values</span><span class="p">(</span><span class="n">by</span><span class="o">=</span><span class="sh">'</span><span class="s">Points</span><span class="sh">'</span><span class="p">,</span> <span class="n">ascending</span><span class="o">=</span><span class="bp">False</span><span class="p">)</span>

<span class="n">standing_season2_sorted</span><span class="p">[</span><span class="sh">'</span><span class="s">Position</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">29</span><span class="p">))</span>

<span class="n">final</span><span class="p">[</span><span class="sh">'</span><span class="s">Position</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">29</span><span class="p">))</span>

<span class="k">def</span> <span class="nf">position_to_ordinal</span><span class="p">(</span><span class="n">position</span><span class="p">):</span>
    <span class="n">suffix</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">th</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">st</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">nd</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">rd</span><span class="sh">'</span><span class="p">]</span> <span class="o">+</span> <span class="p">[</span><span class="sh">'</span><span class="s">th</span><span class="sh">'</span><span class="p">]</span> <span class="o">*</span> <span class="mi">17</span>
    <span class="k">if</span> <span class="mi">10</span> <span class="o">&lt;=</span> <span class="n">position</span> <span class="o">%</span> <span class="mi">100</span> <span class="o">&lt;=</span> <span class="mi">20</span><span class="p">:</span>
        <span class="n">suffix_position</span> <span class="o">=</span> <span class="sh">'</span><span class="s">th</span><span class="sh">'</span>
    <span class="k">else</span><span class="p">:</span>
        <span class="n">suffix_position</span> <span class="o">=</span> <span class="n">suffix</span><span class="p">[</span><span class="n">position</span> <span class="o">%</span> <span class="mi">10</span><span class="p">]</span>
    <span class="k">return</span> <span class="sa">f</span><span class="sh">"</span><span class="si">{</span><span class="n">position</span><span class="si">}{</span><span class="n">suffix_position</span><span class="si">}</span><span class="sh">"</span>

<span class="n">final</span><span class="p">[</span><span class="sh">'</span><span class="s">Ordinal_Position</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">final</span><span class="p">[</span><span class="sh">'</span><span class="s">Position</span><span class="sh">'</span><span class="p">].</span><span class="nf">apply</span><span class="p">(</span><span class="n">position_to_ordinal</span><span class="p">)</span>
<span class="n">standing_season2_sorted</span><span class="p">[</span><span class="sh">'</span><span class="s">Ordinal_Position</span><span class="sh">'</span><span class="p">]</span> <span class="o">=</span> <span class="n">standing_season2_sorted</span><span class="p">[</span><span class="sh">'</span><span class="s">Position</span><span class="sh">'</span><span class="p">].</span><span class="nf">apply</span><span class="p">(</span><span class="n">position_to_ordinal</span><span class="p">)</span>

<span class="n">merged_df</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nf">merge</span><span class="p">(</span><span class="n">final</span><span class="p">[[</span><span class="sh">'</span><span class="s">TeamName</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Ordinal_Position</span><span class="sh">'</span><span class="p">]],</span> 
                     <span class="n">standing_season2_sorted</span><span class="p">[[</span><span class="sh">'</span><span class="s">TeamName</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Ordinal_Position</span><span class="sh">'</span><span class="p">]],</span> 
                     <span class="n">on</span><span class="o">=</span><span class="sh">'</span><span class="s">TeamName</span><span class="sh">'</span><span class="p">,</span> 
                     <span class="n">suffixes</span><span class="o">=</span><span class="p">(</span><span class="sh">'</span><span class="s">_simulated</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">_actual</span><span class="sh">'</span><span class="p">))</span>


<span class="n">merged_df</span><span class="p">.</span><span class="n">columns</span> <span class="o">=</span> <span class="p">[</span><span class="sh">'</span><span class="s">TeamName</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Simulated Position</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">Actual Position</span><span class="sh">'</span><span class="p">]</span>

</code></pre></div></div>

<div>
<style scoped="">
    .dataframe tbody tr th:only-of-type {
        vertical-align: middle;
    }

    .dataframe tbody tr th {
        vertical-align: top;
    }

    .dataframe thead th {
        text-align: right;
    }
</style>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>TeamName</th>
      <th>Simulated Position</th>
      <th>Actual Position</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>0</th>
      <td>Miami</td>
      <td>1st</td>
      <td>1st</td>
    </tr>
    <tr>
      <th>1</th>
      <td>Baltimore</td>
      <td>2nd</td>
      <td>3rd</td>
    </tr>
    <tr>
      <th>2</th>
      <td>Cincinnati</td>
      <td>3rd</td>
      <td>5th</td>
    </tr>
    <tr>
      <th>3</th>
      <td>Boston</td>
      <td>4th</td>
      <td>4th</td>
    </tr>
    <tr>
      <th>4</th>
      <td>New York S</td>
      <td>5th</td>
      <td>2nd</td>
    </tr>
    <tr>
      <th>5</th>
      <td>Chicago B</td>
      <td>6th</td>
      <td>7th</td>
    </tr>
    <tr>
      <th>6</th>
      <td>Seattle</td>
      <td>7th</td>
      <td>6th</td>
    </tr>
    <tr>
      <th>7</th>
      <td>St. Louis</td>
      <td>8th</td>
      <td>8th</td>
    </tr>
    <tr>
      <th>8</th>
      <td>Oakland</td>
      <td>9th</td>
      <td>13th</td>
    </tr>
    <tr>
      <th>9</th>
      <td>Arlington</td>
      <td>10th</td>
      <td>9th</td>
    </tr>
    <tr>
      <th>10</th>
      <td>Chicago H</td>
      <td>11th</td>
      <td>10th</td>
    </tr>
    <tr>
      <th>11</th>
      <td>Toronto</td>
      <td>12th</td>
      <td>14th</td>
    </tr>
    <tr>
      <th>12</th>
      <td>Philadelphia</td>
      <td>13th</td>
      <td>11th</td>
    </tr>
    <tr>
      <th>13</th>
      <td>Minneapolis</td>
      <td>14th</td>
      <td>12th</td>
    </tr>
    <tr>
      <th>14</th>
      <td>Pittsburgh</td>
      <td>15th</td>
      <td>18th</td>
    </tr>
    <tr>
      <th>15</th>
      <td>Kansas City</td>
      <td>16th</td>
      <td>15th</td>
    </tr>
    <tr>
      <th>16</th>
      <td>Detroit</td>
      <td>17th</td>
      <td>16th</td>
    </tr>
    <tr>
      <th>17</th>
      <td>Los Angeles</td>
      <td>18th</td>
      <td>23rd</td>
    </tr>
    <tr>
      <th>18</th>
      <td>Atlanta</td>
      <td>19th</td>
      <td>25th</td>
    </tr>
    <tr>
      <th>19</th>
      <td>Montreal</td>
      <td>20th</td>
      <td>20th</td>
    </tr>
    <tr>
      <th>20</th>
      <td>Cleveland Queens</td>
      <td>21st</td>
      <td>17th</td>
    </tr>
    <tr>
      <th>21</th>
      <td>Houston</td>
      <td>22nd</td>
      <td>21st</td>
    </tr>
    <tr>
      <th>22</th>
      <td>Milwaukee</td>
      <td>23rd</td>
      <td>19th</td>
    </tr>
    <tr>
      <th>23</th>
      <td>San Francisco</td>
      <td>24th</td>
      <td>26th</td>
    </tr>
    <tr>
      <th>24</th>
      <td>Denver</td>
      <td>25th</td>
      <td>27th</td>
    </tr>
    <tr>
      <th>25</th>
      <td>Anaheim</td>
      <td>26th</td>
      <td>22nd</td>
    </tr>
    <tr>
      <th>26</th>
      <td>New York C</td>
      <td>27th</td>
      <td>28th</td>
    </tr>
    <tr>
      <th>27</th>
      <td>San Diego</td>
      <td>28th</td>
      <td>24th</td>
    </tr>
  </tbody>
</table>
</div>

<p>The above table shows the simulated position and the actual position for each team.</p>

<p>Looking at the top 5 teams, the simulated position (5th) for the New York S team is the furthest from the actual position (2nd) in the final standing. 
New York S tends to win with a big difference in goals against weaker teams but not against middle to top teams, scoring 1 to 2 goals. 
That could be why the parameters of the fit (\(\alpha = 0.2\), \(\beta = -0.4\)) show not a strong attack strenght and so the simulations penalise the team.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">30</span><span class="p">))</span>

<span class="k">for</span> <span class="n">k</span><span class="p">,</span> <span class="n">i</span> <span class="ow">in</span> <span class="nf">zip</span><span class="p">(</span><span class="n">final</span><span class="p">[</span><span class="sh">'</span><span class="s">TeamID</span><span class="sh">'</span><span class="p">],</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">29</span><span class="p">)):</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="n">i</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="si">{</span><span class="n">final</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">final</span><span class="p">[</span><span class="sh">'</span><span class="s">TeamID</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span><span class="n">k</span><span class="p">,</span> <span class="sh">'</span><span class="s">TeamName</span><span class="sh">'</span><span class="p">].</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
    
    <span class="n">gw</span> <span class="o">=</span> <span class="n">cumulatives_df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">cumulatives_df</span><span class="p">[</span><span class="sh">'</span><span class="s">team_id</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="n">k</span><span class="p">,</span> <span class="p">[</span><span class="sh">'</span><span class="s">gameweek</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">cumulative_points</span><span class="sh">'</span><span class="p">]].</span><span class="n">gameweek</span><span class="p">.</span><span class="n">values</span>
    <span class="n">cp</span> <span class="o">=</span> <span class="n">cumulatives_df</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">cumulatives_df</span><span class="p">[</span><span class="sh">'</span><span class="s">team_id</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="n">k</span><span class="p">,</span> <span class="p">[</span><span class="sh">'</span><span class="s">gameweek</span><span class="sh">'</span><span class="p">,</span> <span class="sh">'</span><span class="s">cumulative_points</span><span class="sh">'</span><span class="p">]].</span><span class="n">cumulative_points</span><span class="p">.</span><span class="n">values</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">gw</span><span class="p">,</span> <span class="n">cp</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">'</span><span class="s">red</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">Model</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="nf">list</span><span class="p">(</span><span class="nf">range</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="mi">55</span><span class="p">)),</span> <span class="n">actual_cumulative_points2</span><span class="p">[</span><span class="n">k</span><span class="p">],</span> <span class="n">color</span> <span class="o">=</span> <span class="sh">'</span><span class="s">black</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sh">'</span><span class="s">Observed</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Gameweek</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Points</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">ylim</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">150</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">legend</span><span class="p">(</span><span class="n">loc</span><span class="o">=</span><span class="sh">'</span><span class="s">upper left</span><span class="sh">'</span><span class="p">)</span>
    
<span class="n">plt</span><span class="p">.</span><span class="nf">tight_layout</span><span class="p">()</span>
    
</code></pre></div></div>

<p><img src="/assets/images/post_football/output_52_0.png" alt="png" /></p>

<p>The above plot shows the comparison between the cumulative points thoughout the season. The red line shows the posterior predictive validation of the model while the black line shows the actual cumulative points for the second season.</p>

<p>Overall, the model tends to slighlty underestimate the top teams, approximate more confidently the middle teams and underestimate the bottom teams.
As also mentioned above, New York S is significantly underestimated by the model.</p>

<p>To improve the model, we can make it a hierarchical bayesian model. This approach will allow to include additional layers of structure, leading to more accurate predictions. We can introduce hyperparameters which control the distributions of the team-specific parameters, as well as hyper-priors.</p>

<p>Moreover, including additional information i.e. shots, startingXI and position of the players could make the model more accurate in its predictions. I started to explore the relation between goals and shots, noticing a correlation between the two variable. However, the data show a considerable scatter which makes hard in the first place to model the dependence of goals on shots.
I would try the following approach:
Assuming that \(shots \sim \mathcal{N}(\mu, \Sigma^2)\) and \(\mathrm{Shots} = m \cdot \mathrm{Goals} + q\).</p>

<p>We can build a Gaussian Likelihood:</p>

<p>\(P\left(\left[\mathrm{Shots}\right] \mid\left[Goals\right]\right)=\frac{1}{\sqrt{2 \pi \Sigma_n^2}} \exp \left(\frac{-\left([\mathrm{Shots}]-\left[\overline{\mathrm{Shots}}\right]\right)^2}{2 \Sigma_n^2}\right)\)
with \(\left[\overline{\mathrm{Shots}}\right] = m \cdot \mathrm{Goals} + q\)  and \(\Sigma^2=\vec{\nu}^T\left(S_n+\Lambda\right) \vec{\nu}\)
where \(\vec{\nu}\) is the vector orthogonal to the mean relation (\(\vec{\nu}\) = (-m,1) in case of a straight line)
\(S_n\) is the uncertainty tensor and \(\Lambda\) the scatter tensor</p>

<p>In the case of no error for goals and shots, the variance reduces to the scatter \(\Sigma^2 = \lambda^2\)
We can sample the posterior distribution of the parameters \(m, q, \lambda\) and characterise the scaling relation, including it into the model.</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">seaborn</span> <span class="k">as</span> <span class="n">sns</span>

<span class="n">position_probabilities</span> <span class="o">=</span> <span class="p">{</span><span class="n">team_id</span><span class="p">:</span> <span class="n">counts</span> <span class="o">/</span> <span class="n">np</span><span class="p">.</span><span class="nf">sum</span><span class="p">(</span><span class="n">counts</span><span class="p">)</span> <span class="k">for</span> <span class="n">team_id</span><span class="p">,</span> <span class="n">counts</span> <span class="ow">in</span> <span class="n">position_counts</span><span class="p">.</span><span class="nf">items</span><span class="p">()}</span>
<span class="n">team_list</span> <span class="o">=</span> <span class="nf">list</span><span class="p">(</span><span class="n">position_probabilities</span><span class="p">.</span><span class="nf">keys</span><span class="p">())</span>
<span class="n">team_name_list</span> <span class="o">=</span> <span class="p">[</span><span class="n">teams</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">teams</span><span class="p">[</span><span class="sh">'</span><span class="s">TeamID</span><span class="sh">'</span><span class="p">]</span> <span class="o">==</span> <span class="n">team_id</span><span class="p">,</span> <span class="sh">'</span><span class="s">TeamName</span><span class="sh">'</span><span class="p">].</span><span class="n">values</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span> <span class="k">for</span> <span class="n">team_id</span> <span class="ow">in</span> <span class="n">position_probabilities</span><span class="p">.</span><span class="nf">keys</span><span class="p">()]</span>

<span class="n">prob_matrix</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="n">position_probabilities</span><span class="p">[</span><span class="n">team_id</span><span class="p">]</span> <span class="k">for</span> <span class="n">team_id</span> <span class="ow">in</span> <span class="n">team_list</span><span class="p">])</span>

<span class="n">positions</span> <span class="o">=</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">29</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">30</span><span class="p">,</span> <span class="mi">20</span><span class="p">))</span>
<span class="n">sns</span><span class="p">.</span><span class="nf">heatmap</span><span class="p">(</span><span class="n">prob_matrix</span><span class="p">,</span> <span class="n">cmap</span><span class="o">=</span><span class="sh">"</span><span class="s">YlGnBu</span><span class="sh">"</span><span class="p">,</span> <span class="n">annot</span><span class="o">=</span><span class="bp">True</span><span class="p">,</span> <span class="n">annot_kws</span><span class="o">=</span><span class="p">{</span><span class="sh">"</span><span class="s">size</span><span class="sh">"</span><span class="p">:</span> <span class="mi">15</span><span class="p">},</span>
            <span class="n">fmt</span><span class="o">=</span><span class="sh">"</span><span class="s">.2f</span><span class="sh">"</span><span class="p">,</span> <span class="n">xticklabels</span><span class="o">=</span><span class="n">positions</span><span class="p">,</span> <span class="n">yticklabels</span><span class="o">=</span><span class="n">team_name_list</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">"</span><span class="s">Position</span><span class="sh">"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">"</span><span class="s">Team ID</span><span class="sh">"</span><span class="p">,</span> <span class="n">fontsize</span><span class="o">=</span><span class="mi">18</span><span class="p">)</span>

<span class="n">plt</span><span class="p">.</span><span class="nf">xticks</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">yticks</span><span class="p">(</span><span class="n">fontsize</span><span class="o">=</span><span class="mi">14</span><span class="p">)</span>
<span class="n">plt</span><span class="p">.</span><span class="nf">show</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="/assets/images/post_football/output_55_0.png" alt="png" /></p>

<p>The matrix above shows the probability of each team to end in each position of the final standing. 
The position probabilities are calculated by counting how many times each team finishes in each position across simulations and dividing by the total number of simulations. While this empirical approach provides straightforward estimates, alternative methods could give more refined insights. For instance, using a regression-based probability estimation model which predict the probability of each position based on various features, could give a more precise estimate of the standings probabilities.</p>

<hr />
<hr />
<hr />

<h3 id="extra">Extra</h3>

<p>I explored the relation between goal scored and shot attemps to try to include this information in the model.
There is correlation between the two variables, however the data show a considerable scatter.
(See the cells above for comments and possible approaches)</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">plt</span><span class="p">.</span><span class="nf">figure</span><span class="p">(</span><span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">15</span><span class="p">,</span><span class="mi">30</span><span class="p">))</span>

<span class="k">for</span> <span class="n">k</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">29</span><span class="p">):</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">subplot</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="n">k</span><span class="p">)</span>
    <span class="n">score</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">shots</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="n">defence_a</span> <span class="o">=</span> <span class="p">[]</span>
    <span class="k">for</span> <span class="n">row</span> <span class="ow">in</span> <span class="n">results</span><span class="p">.</span><span class="n">loc</span><span class="p">[(</span><span class="n">results</span><span class="p">[</span><span class="sh">'</span><span class="s">SeasonID</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span><span class="mi">1</span><span class="p">)].</span><span class="nf">itertuples</span><span class="p">():</span>
        <span class="k">if</span> <span class="n">row</span><span class="p">.</span><span class="n">HomeTeamID</span> <span class="o">==</span> <span class="n">k</span><span class="p">:</span>
            <span class="n">a_id</span> <span class="o">=</span> <span class="n">row</span><span class="p">.</span><span class="n">AwayTeamID</span>
            <span class="n">defence_a</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">teams_params</span><span class="p">.</span><span class="n">loc</span><span class="p">[</span><span class="n">teams_params</span><span class="p">[</span><span class="sh">'</span><span class="s">TeamID</span><span class="sh">'</span><span class="p">]</span><span class="o">==</span><span class="n">a_id</span><span class="p">,</span> <span class="sh">'</span><span class="s">beta</span><span class="sh">'</span><span class="p">].</span><span class="n">iloc</span><span class="p">[</span><span class="mi">0</span><span class="p">])</span>
            <span class="n">shots</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">row</span><span class="p">.</span><span class="n">HomeShots</span><span class="p">)</span>
            <span class="n">score</span><span class="p">.</span><span class="nf">append</span><span class="p">(</span><span class="n">row</span><span class="p">.</span><span class="n">HomeScore</span><span class="p">)</span>
    

    <span class="n">score</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">Series</span><span class="p">(</span><span class="n">score</span><span class="p">)</span>
    <span class="n">shots</span> <span class="o">=</span> <span class="n">pd</span><span class="p">.</span><span class="nc">Series</span><span class="p">(</span><span class="n">shots</span><span class="p">)</span>
    <span class="n">corr</span> <span class="o">=</span> <span class="n">score</span><span class="p">.</span><span class="nf">corr</span><span class="p">(</span><span class="n">shots</span><span class="p">)</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="nf">title</span><span class="p">(</span><span class="sa">f</span><span class="sh">'</span><span class="s">Correlation=</span><span class="si">{</span><span class="nf">round</span><span class="p">(</span><span class="n">corr</span><span class="p">,</span><span class="mi">2</span><span class="p">)</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">shots</span><span class="p">,</span> <span class="n">score</span><span class="p">,</span> <span class="sh">'</span><span class="s">o</span><span class="sh">'</span><span class="p">,</span> <span class="n">label</span><span class="o">=</span><span class="sa">f</span><span class="sh">'</span><span class="s">TeamID_Home=</span><span class="si">{</span><span class="n">k</span><span class="si">}</span><span class="sh">'</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sa">f</span><span class="sh">'</span><span class="s">C</span><span class="si">{</span><span class="n">k</span><span class="si">}</span><span class="sh">'</span><span class="p">)</span>
    
    <span class="n">plt</span><span class="p">.</span><span class="nf">xlabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Shots</span><span class="sh">'</span><span class="p">)</span>
    <span class="n">plt</span><span class="p">.</span><span class="nf">ylabel</span><span class="p">(</span><span class="sh">'</span><span class="s">Score</span><span class="sh">'</span><span class="p">)</span>
<span class="c1">#     plt.legend()
</span>    
<span class="n">plt</span><span class="p">.</span><span class="nf">tight_layout</span><span class="p">()</span>

</code></pre></div></div>

<p><img src="/assets/images/post_football/output_60_0.png" alt="png" /></p>

<hr />
<hr />]]></content><author><name></name></author><category term="" /><summary type="html"><![CDATA[```python import numpy as np import pandas as pd from matplotlib import pyplot as plt]]></summary></entry><entry><title type="html">Test</title><link href="http://localhost:4000/blog/test" rel="alternate" type="text/html" title="Test" /><published>2025-03-31T00:00:00+01:00</published><updated>2025-03-31T00:00:00+01:00</updated><id>http://localhost:4000/blog/test</id><content type="html" xml:base="http://localhost:4000/blog/test"><![CDATA[<p>To start, we'll need a dataset to work with:</p>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">import</span> <span class="n">numpy</span> <span class="k">as</span> <span class="n">np</span>
<span class="kn">import</span> <span class="n">matplotlib.pyplot</span> <span class="k">as</span> <span class="n">plt</span>
<span class="kn">from</span> <span class="n">matplotlib.patches</span> <span class="kn">import</span> <span class="n">Ellipse</span>

<span class="c1"># Reproducible!
</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">seed</span><span class="p">(</span><span class="mi">42</span><span class="p">)</span>

<span class="c1"># A helper function to make the plots with error ellipses
</span><span class="k">def</span> <span class="nf">plot_error_ellipses</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">X</span><span class="p">,</span> <span class="n">S</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="sh">"</span><span class="s">k</span><span class="sh">"</span><span class="p">):</span>
    <span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="nf">len</span><span class="p">(</span><span class="n">X</span><span class="p">)):</span>
        <span class="n">vals</span><span class="p">,</span> <span class="n">vecs</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">linalg</span><span class="p">.</span><span class="nf">eig</span><span class="p">(</span><span class="n">S</span><span class="p">[</span><span class="n">n</span><span class="p">])</span>
        <span class="n">theta</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">degrees</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="nf">arctan2</span><span class="p">(</span><span class="o">*</span><span class="n">vecs</span><span class="p">[::</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">]))</span>
        <span class="n">w</span><span class="p">,</span> <span class="n">h</span> <span class="o">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="nf">sqrt</span><span class="p">(</span><span class="n">vals</span><span class="p">)</span>
        <span class="n">ell</span> <span class="o">=</span> <span class="nc">Ellipse</span><span class="p">(</span><span class="n">xy</span><span class="o">=</span><span class="n">X</span><span class="p">[</span><span class="n">n</span><span class="p">],</span> <span class="n">width</span><span class="o">=</span><span class="n">w</span><span class="p">,</span> <span class="n">height</span><span class="o">=</span><span class="n">h</span><span class="p">,</span> <span class="n">angle</span><span class="o">=</span><span class="n">theta</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mf">0.5</span><span class="p">)</span>
        <span class="n">ell</span><span class="p">.</span><span class="nf">set_facecolor</span><span class="p">(</span><span class="sh">"</span><span class="s">none</span><span class="sh">"</span><span class="p">)</span>
        <span class="n">ax</span><span class="p">.</span><span class="nf">add_artist</span><span class="p">(</span><span class="n">ell</span><span class="p">)</span>
    <span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">X</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">],</span> <span class="n">X</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">],</span> <span class="sh">"</span><span class="s">.</span><span class="sh">"</span><span class="p">,</span> <span class="n">color</span><span class="o">=</span><span class="n">color</span><span class="p">,</span> <span class="n">ms</span><span class="o">=</span><span class="mi">4</span><span class="p">)</span>


<span class="c1"># Generate the true coordinates of the data points.
</span><span class="n">N</span> <span class="o">=</span> <span class="mi">10</span>
<span class="n">m_true</span> <span class="o">=</span> <span class="mf">1.2</span>
<span class="n">b_true</span> <span class="o">=</span> <span class="o">-</span><span class="mf">0.1</span>
<span class="n">X_true</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">empty</span><span class="p">((</span><span class="n">N</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
<span class="n">X_true</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">uniform</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">10</span><span class="p">,</span> <span class="n">N</span><span class="p">)</span>
<span class="n">X_true</span><span class="p">[:,</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">m_true</span> <span class="o">*</span> <span class="n">X_true</span><span class="p">[:,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">+</span> <span class="n">b_true</span>
<span class="n">X</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">empty</span><span class="p">((</span><span class="n">N</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>

<span class="c1"># Generate error ellipses and add uncertainties to each point.
</span><span class="n">S</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="n">N</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
<span class="k">for</span> <span class="n">n</span> <span class="ow">in</span> <span class="nf">range</span><span class="p">(</span><span class="n">N</span><span class="p">):</span>
    <span class="n">L</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">zeros</span><span class="p">((</span><span class="mi">2</span><span class="p">,</span> <span class="mi">2</span><span class="p">))</span>
    <span class="n">L</span><span class="p">[</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">uniform</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
    <span class="n">L</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">exp</span><span class="p">(</span><span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">uniform</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">))</span>
    <span class="n">L</span><span class="p">[</span><span class="mi">1</span><span class="p">,</span> <span class="mi">0</span><span class="p">]</span> <span class="o">=</span> <span class="mf">0.5</span> <span class="o">*</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">randn</span><span class="p">()</span>
    <span class="n">S</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">dot</span><span class="p">(</span><span class="n">L</span><span class="p">,</span> <span class="n">L</span><span class="p">.</span><span class="n">T</span><span class="p">)</span>
    <span class="n">X</span><span class="p">[</span><span class="n">n</span><span class="p">]</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="n">random</span><span class="p">.</span><span class="nf">multivariate_normal</span><span class="p">(</span><span class="n">X_true</span><span class="p">[</span><span class="n">n</span><span class="p">],</span> <span class="n">S</span><span class="p">[</span><span class="n">n</span><span class="p">])</span>

<span class="c1"># Plot the simulated dataset.
</span><span class="n">fig</span><span class="p">,</span> <span class="n">ax</span> <span class="o">=</span> <span class="n">plt</span><span class="p">.</span><span class="nf">subplots</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="n">figsize</span><span class="o">=</span><span class="p">(</span><span class="mi">5</span><span class="p">,</span> <span class="mi">5</span><span class="p">))</span>
<span class="n">x0</span> <span class="o">=</span> <span class="n">np</span><span class="p">.</span><span class="nf">array</span><span class="p">([</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">])</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">plot</span><span class="p">(</span><span class="n">x0</span><span class="p">,</span> <span class="n">m_true</span> <span class="o">*</span> <span class="n">x0</span> <span class="o">+</span> <span class="n">b_true</span><span class="p">,</span> <span class="n">lw</span><span class="o">=</span><span class="mi">1</span><span class="p">)</span>
<span class="nf">plot_error_ellipses</span><span class="p">(</span><span class="n">ax</span><span class="p">,</span> <span class="n">X</span><span class="p">,</span> <span class="n">S</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xlim</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_ylim</span><span class="p">(</span><span class="o">-</span><span class="mi">2</span><span class="p">,</span> <span class="mi">12</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_xlabel</span><span class="p">(</span><span class="sh">"</span><span class="s">x</span><span class="sh">"</span><span class="p">)</span>
<span class="n">ax</span><span class="p">.</span><span class="nf">set_ylabel</span><span class="p">(</span><span class="sh">"</span><span class="s">y</span><span class="sh">"</span><span class="p">);</span>
</code></pre></div></div>]]></content><author><name></name></author><category term="" /><summary type="html"><![CDATA[A sample post to show how the content will look and how different headlines, quotes, and code will be represented.]]></summary></entry><entry><title type="html">Sample Post</title><link href="http://localhost:4000/blog/sample-post" rel="alternate" type="text/html" title="Sample Post" /><published>2020-04-24T00:00:00+01:00</published><updated>2020-04-24T00:00:00+01:00</updated><id>http://localhost:4000/blog/sample-post</id><content type="html" xml:base="http://localhost:4000/blog/sample-post"><![CDATA[<p>This post will show you how the content will look like in the post pages and how the headlines, quotes and quotes will be represented. Jekyll is mainly used to write simple markdown and after that it renders out a static pages, so you need to know the basics of writing markdown for that.
For more information about writing markdown you can checkout the following markdown cheatsheets:</p>
<ul>
  <li><a href="https://guides.github.com/features/mastering-markdown/">Mastering Markdown</a></li>
  <li><a href="https://www.markdownguide.org/cheat-sheet/">Markdown Guide</a></li>
  <li><a href="https://github.github.com/gfm/">GitHub Flavored Markdown Spec</a></li>
</ul>

<hr />

<h1 id="this-is-the-h1-text">This is the h1 text</h1>
<h2 id="this-is-the-h2-text">This is the h2 text</h2>
<h3 id="this-is-the-h3-text">This is the h3 text</h3>
<h4 id="this-is-the-h4-text">This is the h4 text</h4>
<h5 id="this-is-the-h5-text">This is the h5 text</h5>
<h6 id="this-is-the-h6-text">This is the h6 text</h6>

<p><strong>Bold Text in the post will look like:</strong><br />
<strong>This text is Bold</strong></p>

<p><strong>Italic Text in the post will look like:</strong><br />
<em>This text is Italic</em></p>

<blockquote>
  <p>Quotes on your post will look like this</p>
</blockquote>

<p><code class="language-plaintext highlighter-rouge">Codes on your post will look like this</code></p>

<p><strong>Link in the post will look like:</strong><br />
<a href="#">This is a link</a></p>

<p><strong>Bullet list in the post will look like:</strong></p>
<ul>
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
  <li>Item 4</li>
  <li>Item 5</li>
</ul>

<p><strong>Number list in the post will look like:</strong></p>
<ol>
  <li>Item 1</li>
  <li>Item 2</li>
  <li>Item 3</li>
  <li>Item 4</li>
  <li>Item 5</li>
</ol>

<p><strong>Images in the post will look like:</strong><br />
<img src="assets/images/post_football/output_28_0.png" alt="Test Image" /></p>

<p><strong>Normal text in the post will look like</strong><br />
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris id finibus nisl. Etiam in hendrerit est. Nulla non erat ac lectus interdum lobortis. Vestibulum at mi ex. Mauris nisl mi, venenatis et feugiat nec, finibus porttitor velit. Suspendisse tincidunt lobortis leo, quis tristique tellus iaculis quis. Donec eleifend pulvinar gravida. Proin non lorem eros. Donec sit amet finibus ex, eget vestibulum nunc. Ut ut enim id purus porttitor tristique. Vivamus tincidunt eleifend hendrerit. Proin metus felis, ultrices vel dui in, porta dapibus dui. Sed sagittis ex vitae dui tristique dignissim. Cras vel leo ipsum.</p>

<p>Aenean ac neque et risus mattis accumsan. Sed ac tellus molestie, lacinia ante sit amet, convallis felis. Maecenas aliquet lectus nec euismod auctor. Donec finibus pellentesque tortor, ac efficitur metus suscipit non. Proin diam orci, blandit quis malesuada ac, efficitur a nisl. Mauris eleifend consequat blandit. Sed egestas quam et orci gravida, non euismod metus scelerisque. Curabitur venenatis pellentesque erat commodo pharetra. Fusce id ante nec ipsum fringilla auctor. In justo quam, feugiat placerat eleifend dapibus, luctus et quam. Fusce facilisis erat ut odio convallis viverra et id mauris. Sed vehicula tempus consectetur. Aliquam pharetra, purus non egestas tristique, tellus massa fringilla est, id sagittis tellus urna non mauris. Suspendisse fringilla, velit nec blandit facilisis, ligula ante imperdiet est, et placerat magna sem quis tortor.</p>

<p>Vestibulum vitae fermentum velit, rhoncus egestas orci. Nulla at purus ut orci posuere vulputate. In eget leo diam. In congue in diam nec elementum. Suspendisse fringilla ante nulla, eu tristique orci ultrices eget. Aenean non lorem tellus. Vestibulum tempor metus sit amet tellus feugiat, sit amet consequat lacus ultricies.</p>

<p>Donec imperdiet, lectus eget congue cursus, dolor enim finibus risus, ut molestie lorem tellus non tortor. Donec quam nibh, molestie in dapibus et, efficitur non tortor. Morbi orci tellus, mollis vel mi vitae, auctor lobortis erat. Ut gravida velit eget ligula lacinia, id rhoncus tellus gravida. Maecenas laoreet rutrum consequat. Suspendisse sed nibh dui. Curabitur dictum euismod mollis. Sed egestas libero libero, eu accumsan augue placerat non. Nunc id condimentum orci. Mauris vitae sollicitudin quam.</p>

<p><strong>Giphy Gifs will look like:</strong><br /></p>
<iframe src="https://giphy.com/embed/ZqlvCTNHpqrio" width="480" height="259" frameborder="0" class="giphy-embed" allowfullscreen=""></iframe>
<p><a href="https://giphy.com/gifs/laughing-despicable-me-minions-ZqlvCTNHpqrio">via GIPHY</a></p>

<p><strong>YouTUbe Videos will look like:</strong><br /></p>
<iframe width="560" height="315" src="https://www.youtube.com/embed/jTPXwbDtIpA" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>]]></content><author><name></name></author><category term="sample" /><category term="post" /><category term="test" /><summary type="html"><![CDATA[A sample post to show how the content will look and how will different headlines, quotes and codes will be represented.]]></summary></entry><entry><title type="html">How to Install and use WhatATheme?</title><link href="http://localhost:4000/blog/how-to-install-whatatheme" rel="alternate" type="text/html" title="How to Install and use WhatATheme?" /><published>2020-04-22T00:00:00+01:00</published><updated>2020-04-22T00:00:00+01:00</updated><id>http://localhost:4000/blog/how-to-install-whatatheme</id><content type="html" xml:base="http://localhost:4000/blog/how-to-install-whatatheme"><![CDATA[<h1 id="what-is-whatatheme">What is WhatATheme?</h1>
<blockquote>
  <p>Youâ€™ll find this post in your <strong><em>_posts</em></strong> directory. Go ahead and edit it and re-build the site to see your changes. &gt;You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>
</blockquote>

<iframe width="560" height="315" src="https://www.youtube.com/embed/VfPa2c9kwhQ" frameborder="0" allow="accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture" allowfullscreen=""></iframe>

<hr />

<p><strong>WhatATheme</strong> is a customizable Jekyll Portfolio theme which supports blogging. You can use this theme in order to create an elegant, fully responsive portfolio which includes</p>

<h3 id="home-page--">Home Page -</h3>
<ul>
  <li>A Hero section - A section where you can outsource an image which will work as the background for the particular section; it also will include your name and a tagline which can be easily manipulated via the _config.yml file.</li>
  <li>An About section - A section where you can include your image and a 60 word paragraph which again you can easily manipulate using the _config.yml file.</li>
  <li>A Contact section - A section where you can include 3 direct ways to contact<br />
<code class="language-plaintext highlighter-rouge">Ping on Messenger</code><br />
<code class="language-plaintext highlighter-rouge">Send an Email</code><br />
<code class="language-plaintext highlighter-rouge">Tweet on Twitter</code><br />
The contact section will also include 10 different social media buttons for your audience to follow.<br />
<code class="language-plaintext highlighter-rouge">Facebook</code>, <code class="language-plaintext highlighter-rouge">Twitter</code>, <code class="language-plaintext highlighter-rouge">Instagram</code>, <code class="language-plaintext highlighter-rouge">LinkedIn</code>, <code class="language-plaintext highlighter-rouge">GitHub</code>, <code class="language-plaintext highlighter-rouge">YouTube</code>, <code class="language-plaintext highlighter-rouge">Reddit</code>, <code class="language-plaintext highlighter-rouge">Behance</code>, <code class="language-plaintext highlighter-rouge">Dribbble</code> &amp; <code class="language-plaintext highlighter-rouge">Spotify</code>.</li>
</ul>

<h3 id="blog--">Blog -</h3>
<p>The blog includes a horizontal card list where the latest articles are fetched from the _posts folder automatically in top-down format. It also includes an instant search box which matches your query from the title, description &amp; content of your post and shows the result as soon as you type.<br />
The blog card includes</p>
<ul>
  <li>Post Title</li>
  <li>300 words from the content of the post</li>
  <li>The publish date</li>
  <li>The time which will be required to read the post.</li>
</ul>

<h3 id="projects--">Projects -</h3>
<p>The Projects page will include all the projects from the <strong><code class="language-plaintext highlighter-rouge">projects.yml</code></strong> file which is present in the _data folder.<br />
Projects will be showcased in a card-list format where each card will contain</p>
<ul>
  <li>An image related to the project</li>
  <li>A Project Title</li>
  <li>A Project Description of about 80 words</li>
</ul>

<h3 id="footer--">Footer -</h3>
<p>The footer includes</p>
<ul>
  <li>A small about the author widget which show the same <code class="language-plaintext highlighter-rouge">Author Image</code> as mentioned in the about section of the Home page which includes <code class="language-plaintext highlighter-rouge">Name of the Author</code>, <code class="language-plaintext highlighter-rouge">Around 75 words about the author</code>.</li>
  <li>A more link widget which includes a link to any extra page that you've created and a <code class="language-plaintext highlighter-rouge">Subscribe via RSS</code> link.</li>
  <li>A Recent posts widget which will include latest 3 posts.</li>
</ul>

<h4 id="extra-features--">Extra Features -</h4>
<p>WhatATheme comes pre installed with</p>
<ul>
  <li><strong>HTML Compressor</strong> - It'll compress all the pages by removing any extra space or blank lines.</li>
  <li><strong>Google Analytics</strong> - A web analytics service offered by Google that tracks and reports website traffic. For more information <a href="https://analytics.google.com" target="blank">click here</a>.</li>
  <li>
    <p><strong>Disqus</strong> - A worldwide blog comment hosting service for web sites and online communities that use a networked platform. For more information about Disqus <a href="https://help.disqus.com/en/articles/1717053-what-is-disqus" target="blank">click here</a></p>

    <p>##### For more information about WhatATheme <a href="https://github.com/thedevslot/WhatATheme/blob/gh-pages/README.md" target="blank">click here</a>.</p>
  </li>
</ul>

<hr />

<h1 id="installation">Installation</h1>
<h3 id="step-1---setting-up-whatatheme">Step 1 - Setting up WhatATheme</h3>
<blockquote>
  <ul>
    <li>Fork the <a href="https://github.com/thedevslot/WhatATheme/tree/master" target="blankl">repository</a></li>
    <li>Go to repository settings and set Github Pages source as master.</li>
    <li>Your new site should be ready at <a href="#" target="blank">https://username.github.io/WhatATheme/</a></li>
  </ul>
</blockquote>

<h3 id="step-2---making-changes-via-_configyml">Step 2 - Making changes via <strong>_config.yml</strong></h3>
<blockquote>
  <ul>
    <li>Open _config.yml file</li>
    <li>Fill the available details accordingly</li>
    <li>Commit the changes</li>
  </ul>
</blockquote>]]></content><author><name></name></author><category term="how to" /><category term="setup" /><category term="theme" /><summary type="html"><![CDATA[This post will guide you to install WhatATheme on your Jekyll site, follow the easy steps to set up WhatATheme.]]></summary></entry><entry><title type="html">What is Jekyll? How to use it?</title><link href="http://localhost:4000/blog/what-is-jekyll-how-to-use-it" rel="alternate" type="text/html" title="What is Jekyll? How to use it?" /><published>2020-04-21T00:00:00+01:00</published><updated>2020-04-21T00:00:00+01:00</updated><id>http://localhost:4000/blog/what-is-jekyll-how-to-use-it</id><content type="html" xml:base="http://localhost:4000/blog/what-is-jekyll-how-to-use-it"><![CDATA[<p>Jekyll is a simple, blog-aware, static site generator perfect for personal, project, or organization sites. Think of it like a file-based CMS, without all the complexity. Jekyll takes your content, renders Markdown and Liquid templates, and spits out a complete, static website ready to be served by Apache, Nginx or another web server. Jekyll is the engine behind GitHub Pages, which you can use to host sites right from your GitHub repositories and if you don't know what GitHub Pages are you can visit on click <a href="https://help.github.com/en/github/working-with-github-pages/about-github-pages" target="blank">here</a> or <a href="https://pages.github.com/" target="blank">here</a></p>
<h6 id="source--jekyll-docs">Source : <a href="https://jekyllrb.com/docs/"><code class="language-plaintext highlighter-rouge">Jekyll Docs</code></a></h6>

<blockquote>
  <h3 id="to-know-more-and-get-started-with-jekyll-you-can-click-here">To know more and get started with Jekyll you can click <a href="https://jekyllrb.com/" targe="_blank">here</a></h3>
</blockquote>

<h1 id="installation">Installation</h1>
<p><strong>Jekyll is a Ruby Gem that can be installed on most systems.</strong></p>
<h3 id="requirements">Requirements</h3>
<ul>
  <li><a href="https://www.ruby-lang.org/en/downloads/" target="_blank">Ruby</a> version 2.5.0 or above, including all development headers (ruby version can be checked by running ruby -v)</li>
  <li><a href="https://rubygems.org/pages/download" target="_blank">Ruby Gems</a> (which you can check by running gem -v)</li>
  <li><a href="https://gcc.gnu.org/install/" target="_blank">GCC</a> and <a href="https://www.gnu.org/software/make/" target="_blank">Make</a></li>
</ul>

<h3 id="after-installing-the-requirements-you-can-follow-these-guides">After Installing the Requirements you can follow these guides:</h3>
<p><strong>For detailed install instructions have a look at the guide for your operating system.</strong></p>
<ul>
  <li><a href="https://jekyllrb.com/docs/installation/macos/" target="_blank">macOS</a></li>
  <li><a href="https://jekyllrb.com/docs/installation/ubuntu/" target="_blank">Ubuntu</a></li>
  <li><a href="https://jekyllrb.com/docs/installation/other-linux/" target="_blank">Other Linux Distros</a></li>
  <li><a href="https://jekyllrb.com/docs/installation/windows/" target="_blank">Windows</a></li>
</ul>

<h3 id="creating-a-new-jekyll-site">Creating a new Jekyll site</h3>
<p><strong>We can create a new Jekyll site just by a simple command:</strong><br /></p>
<blockquote>
  <h1 id="jekyll-new-my-site"><code class="language-plaintext highlighter-rouge">jekyll new my-site</code></h1>
</blockquote>

<p>Jekyll will create a new directory named as <code class="language-plaintext highlighter-rouge">my-site</code> which is customizable (i.e., you can change the name from <code class="language-plaintext highlighter-rouge">my-site</code> to anything you want for example <code class="language-plaintext highlighter-rouge">jekyll new brutus</code>).</p>

<h3 id="changing-into-the-directory">Changing into the Directory</h3>
<p><strong>We have to go inside the directory:</strong><br /></p>
<blockquote>
  <h1 id="cd-my-site"><code class="language-plaintext highlighter-rouge">cd my-site</code></h1>
</blockquote>

<p>Again, <code class="language-plaintext highlighter-rouge">my-site</code> is just a random name which is customizable.</p>

<h3 id="building-the-site-and-making-it-available-on-a-local-server">Building the site and making it available on a local server</h3>
<blockquote>
  <h1 id="bundle-exec-jekyll-serve"><code class="language-plaintext highlighter-rouge">bundle exec jekyll serve</code></h1>
</blockquote>

<h3 id="browsing-your-jekyll-site">Browsing your Jekyll site</h3>
<blockquote>
  <h1 id="browse-to-httplocalhost4000">Browse to <a href="http://localhost:4000/" target="_blank"><code class="language-plaintext highlighter-rouge">http://localhost:4000/</code></a></h1>
</blockquote>

<h6 id="on-encountering-any-problem-while-building-and-serving-your-jekyll-site-you-can-consider-visiting-to-the-troubleshooting-page">On encountering any problem while building and serving your Jekyll site you can consider visiting to the <a href="https://jekyllrb.com/docs/troubleshooting/#configuration-problems" target="_blank">troubleshooting</a> page</h6>]]></content><author><name></name></author><category term="jekyll" /><category term="informative" /><category term="technology" /><summary type="html"><![CDATA[Jekyll is a static site generator. You give it text written in your favorite markup language and it uses layouts to create a static website.]]></summary></entry></feed>